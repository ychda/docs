import{_ as n,c as s,o as a,a as p}from"./app.b8c921aa.js";const m='{"title":"\u6570\u72EC\u89E3\u6CD5 - Sudoku Solver","description":"","frontmatter":{"layout":"post","title":"\u6570\u72EC\u89E3\u6CD5 - Sudoku Solver","date":"2020-12-22 14:52:00 +0800","categories":["algorithm"]},"headers":[{"level":2,"title":"\u6570\u72EC","slug":"\u6570\u72EC"}],"relativePath":"algorithm/sudoku.md","lastUpdated":1683522715000}',t={},o=p(`<h2 id="\u6570\u72EC" tabindex="-1">\u6570\u72EC <a class="header-anchor" href="#\u6570\u72EC" aria-hidden="true">#</a></h2><div class="language-python"><pre><code>
<span class="token comment"># \u4EE3\u7801\u4FEE\u6539\u4E8E leetcode-37</span>

board <span class="token operator">=</span> <span class="token string">&#39;.7.25.4..8.....9.3.....3.7.7....4.2.1.......7.4.5....8.9.6.....4.1.....5..7.82.3.&#39;</span>

<span class="token keyword">def</span> <span class="token function">prt_board</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token number">0</span> <span class="token keyword">and</span> i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-  &#39;</span> <span class="token operator">*</span> <span class="token number">11</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> j <span class="token operator">!=</span> <span class="token number">0</span> <span class="token keyword">and</span> j <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;|  &#39;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">80</span><span class="token punctuation">)</span>


board <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>each <span class="token keyword">for</span> each <span class="token keyword">in</span> board<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
prt_board<span class="token punctuation">(</span>board<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">solve_sudoku</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">:</span>
    line <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    column <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    block <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span> <span class="token keyword">for</span> _a <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _b <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    spaces <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">:</span>
                spaces<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                digit <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
                line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> block<span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>

    valid <span class="token operator">=</span> <span class="token boolean">False</span>

    <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>pos<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">nonlocal</span> valid
        <span class="token keyword">if</span> pos <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>spaces<span class="token punctuation">)</span><span class="token punctuation">:</span>
            valid <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">return</span>
        i<span class="token punctuation">,</span> j <span class="token operator">=</span> spaces<span class="token punctuation">[</span>pos<span class="token punctuation">]</span>
        <span class="token keyword">for</span> digit <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">==</span> column<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">==</span> block<span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
                line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> block<span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>
                board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>digit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
                dfs<span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
                line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> block<span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">if</span> valid<span class="token punctuation">:</span>
                <span class="token keyword">return</span>

    dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


solve_sudoku<span class="token punctuation">(</span>board<span class="token punctuation">)</span>
prt_board<span class="token punctuation">(</span>board<span class="token punctuation">)</span>
</code></pre></div><p>\u53C2\u8003\uFF1A</p><ul><li><a href="https://projecteuler.net/thread=96" target="_blank" rel="noopener noreferrer">projecteuler</a></li><li><a href="https://leetcode-cn.com/problems/sudoku-solver/" target="_blank" rel="noopener noreferrer">leetcode</a></li></ul>`,4),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var y=n(t,[["render",c]]);export{m as __pageData,y as default};
